# Example Supfile for "My Server"
---

env:
  NAME: example
  REPO: github.com/pressly/stackup
  IMAGE: pressly/example
  HOST_PORT: 8000
  CONTAINER_PORT: 8000

networks:
  local:
    env:
      CONFIG: example.local.cfg
    hosts:
      - localhost
  dev:
    env:
      CONFIG: example.dev.cfg
    hosts:
      - docker@192.168.59.103
  stg:
    env:
      CONFIG: example.stg.cfg
    hosts:
      - beta1.example.com
      - beta2.example.com
      - beta3.example.com
      - beta4.example.com
  prod:
    env:
      CONFIG: example.prod.cfg
    hosts:
      - prod1.example.com
      - prod2.example.com
      - prod3.example.com
      - prod4.example.com

commands:
  ping:
    desc: Print uname and current date/time.
    run: uname -a; date

  config:
    desc: Upload/test config file.
    upload:
      - src: ./$CONFIG
        dst: /tmp/
    run: test -f /tmp/$CONFIG

  ps:
    desc: List running Docker containers
    run: sudo docker ps | grep $NAME

  pull:
    desc: Pull git repository
    script: ./scripts/docker-pull.sh

  upload:
    desc: Upload this repository
    upload:
      - src: ./
        dst: /tmp/$IMAGE

  build:
    desc: Build Docker image
    script: ./scripts/docker-build.sh

  image:
    desc: List Docker image
    run: sudo docker images | grep $IMAGE

  run:
    desc: Run Docker container
    script: ./scripts/docker-run.sh

  logs:
    desc: Docker logs
    run: sudo docker logs $NAME

  tail-logs:
    desc: Tail Docker logs
    run: sudo docker logs --tail=20 -f $NAME

  health:
    desc: Application health check
    run: curl localhost:$HOST_PORT

  stop:
    desc: Stop Docker container
    run: sudo docker stop $NAME || exit 0

  start:
    desc: Start a stopped Docker container
    run: sudo docker start $NAME || exit 0

  restart:
    desc: Restart Docker container
    run: sudo docker restart $NAME || exit 0

  rm:
    desc: Remove Docker container
    run: sudo docker rm $NAME || exit 0

  shell:
    desc: Interactive shell on all hosts
    stdin: true
    run: /bin/sh

  exec:
    desc: Interactive docker exec on all hosts
    stdin: true
    run: docker exec -i $NAME bash

targets:
  deploy:
    - build
    - run

targets:
  deploy:
    #- pull
    - upload
    - build
    - image
    - config
    - stop
    - rm
    - run
    - ps
    - logs
    - health